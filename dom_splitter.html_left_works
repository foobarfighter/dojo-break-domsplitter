<html>
<head>
  <title>DOM Splitter</title>
	<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/dojo/1.3.2/dojo/dojo.xd.js"></script>
	<script type="text/javascript">
		var TEXT_NODE = 3;
		var ELEMENT_NODE = 1;
		var SPLIT_TEXT = "__SPLIT_POINT__";
	
		var Selection = function(node, startIndex, endIndex) {
			this._node = node;
			this._startIndex = startIndex;
			this._endIndex = endIndex;
			
			this.getStart = function() {
				return this._startIndex;
			}
			this.getEnd = function() {
				return this._endIndex;
			}
			this.getNode = function() {
				return this._node;
			}
			this.getSelectedText = function() {
				return this._node.textContent.substring(this.getStart(), this.getEnd());
			}
		}
	
		// function doSplit() {
		// 			var splitContainerNode = dojo.byId("split_container");
		// 			var splitResultsNode = dojo.byId("split_results");
		// 			
		// 			var selectionNode = findSplitPointNode(splitContainerNode);
		// 			
		// 			var text = selectionNode.getNode().textContent;
		// 			var leftText = text.substring(0, selectionNode.getStart());
		// 			var rightText = text.substr(selectionNode.getEnd());
		// 			
		// 			var parentNode = selectionNode.getNode().parentNode;
		// 			var leftLeaf = document.createTextNode(leftText);
		// 			var rightLeaf = document.createTextNode(rightText);
		// 			var insertion = createParagraph(selectionNode.getSelectedText())
		// 			
		// 			parentNode.removeChild(selectionNode.getNode());
		// 			
		// 			parentNode.parentNode.appendChild(copyElement(parentNode)).appendChild(leftLeaf);
		// 			parentNode.parentNode.appendChild(insertion);
		// 			parentNode.parentNode.appendChild(copyElement(parentNode)).appendChild(rightLeaf);
		// 			
		// 			parentNode.parentNode.removeChild(parentNode);
		// 			
		// 			// while (node.parentNode != splitContainerNode) {
		// 				// node.removeChild();
		// 				// node = node.parentNode;
		// 			// }
		// 		}
		
		function Splitter(containerNode, selection) {
			
			this._containerNode = containerNode;
			this._selection = selection;
			this._newContent = document.createElement("span");
			
			this.doSplit = function() {
				var node = dojo.query("p", this._containerNode)[0]; // firstChild should be the root parent node that contains the selectionNode
				
				var tagStack = this._buildTagStack();
				// this._splitLeftTopDown(node, this._newContent);
				// var left = this._splitLeftBottomUp(this._selection.getNode().parentNode, this._selection.getNode(), node);
				var left = this._splitLeft(this._selection.getNode(), node);
				// var right = this._splitRight(tagStack);
				console.debug(left);
			}
			
			this._buildTagStack = function() {
				var tagStack = [];
				var node = this._selection.getNode().parentNode;
				while (node != this._containerNode) {
					tagStack.push(node);
					node = node.parentNode;
				}
				return tagStack;
			}
			
			this._splitLeft = function(splitNode, limitNode) {
				var node = splitNode.parentNode;
				
				var lastNewNode = null;
				while (node != limitNode.parentNode) {
					var newNode = node.cloneNode(false);
					
					for (var i=0; i < node.childNodes.length; ++i) {
						var child = node.childNodes[i];
						
						if (child != splitNode) {
							var newChild = child.cloneNode(true);
							newNode.appendChild(newChild);
						} else {
							// This eliminates the possibility that the selectionNode
							// is added to the left split tree because the first time through
							// lastNewNode is not defined
							if (lastNewNode) newNode.appendChild(lastNewNode);
							splitNode = node;
							break;
						}
					}
					
					lastNewNode = newNode;
					node = node.parentNode;
				}
				return lastNewNode;
			}
		}
		
		function findSelection(node) {
			var ret = null;
			for (var i=0; i < node.childNodes.length; ++i) {
				var child = node.childNodes[i];
				if (child.nodeType == TEXT_NODE) {
					var index = child.textContent.indexOf(SPLIT_TEXT);
					if (index != -1) {
						return new Selection(child, index, index + SPLIT_TEXT.length);
					}
				} else {
					var ret = findSelection(child);
					if (ret) break;
				}
			}
			return ret;
		}
	
		dojo.addOnLoad(function() {
			var containerNode = dojo.byId("split_container");
			var selection = findSelection(containerNode);
			var splitter = new Splitter(containerNode, selection);
			splitter.doSplit();
		});
	</script>
</head>
<body>

<div id="split_container">
	<p>Lorem ipsum dolor sit <a href="">amet</a>, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco <span style="font-weight: bold">laboris nisi ut aliquip ex ea <span style="font-style: italic">commodo consequat. Duis aute __SPLIT_POINT__ irure dolor in reprehenderit in</span> voluptate velit esse cillum</span> dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in <a href="">culpa</a> qui officia deserunt mollit anim id est laborum.</p>
</div>


<div id="split_results"></div>

</body>
</html>